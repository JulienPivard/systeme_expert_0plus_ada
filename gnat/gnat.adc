--  vim:filetype=ada
--  Dernière modification : Vendredi 31 janvier[01] 2025
--  Auteur : PIVARD Julien

pragma Initialize_Scalars;
--  Initialise les scalaire sans valeur initial à une valeur prédéfinie,
--  invalide si possible, ou une valeur définie dans le pragma.

pragma Overflow_Mode
   (
      General    => Strict,
      --  General    => Minimized,
      --  General    => Eliminated,
      --  Assertions => Strict
      --  Assertions => Minimized
      Assertions => Eliminated
   );
--  Permet de configurer le mode overflow des calculs intermédiaire.
--   - Strict     : utilise le type de base pour faire les calculs
--                   intermédiaire.
--   - Minimized  : utilise la plus grande représentation possible.
--   - Eliminated : utilise la précision infinie. Attention au cout
--                   d'exécution de ce type de calculs.

--  pragma Profile                      (Ravenscar);
--  pragma Partition_Elaboration_Policy (Sequential);

pragma License (GPL);
--  Licence appliquée au code, valeur possible :
--   - Unrestricted (Compatible avec tout)
--   - GPL           (Ne peut pas etre inclut par des Restricted)
--   - Modified_GPL  (Peut etre inclut par des restricted)
--   - Restricted    (Ne peut pas inclure de GPL)

pragma Restrictions (Max_Asynchronous_Select_Nesting => 0);
--  Nombre max de select imbriqué.
pragma Restrictions (Max_Protected_Entries => 1);
--  Nombre max entry pour un objet protégé.
pragma Restrictions (Max_Select_Alternatives => 0);
--  Nombre max d'alternative dans un select.
pragma Restrictions (Max_Task_Entries => 0);
--  Nombre max d'entry par task.
pragma Restrictions (No_Abort_Statements);
--  Pas d'instructions abort.
pragma Restrictions (No_Entry_Calls_In_Elaboration_Code);
--  Interdiction des appels sur des entry lors de l'élaboration. (GNAT)
pragma Restrictions (No_Local_Protected_Objects);
--  Aucun objet protégé ne peut être déclaré ailleurs que
--  dans un package au niveau global.
pragma Restrictions (No_Protected_Type_Allocators);
--  Aucun new d'un type protégé.
pragma Restrictions (No_Protected_Types);
--  Aucun type objet protégé.
pragma Restrictions (No_Select_Statements);
--  Interdit d'utiliser les select.
pragma Restrictions (No_Task_Allocators);
--  Aucune allocation qui crée une task.
pragma Restrictions (No_Task_Hierarchy);
--  Pas de déclaration de task dans une autre task ou sous programme.

pragma Restrictions (No_Direct_Boolean_Operators);
--  Seul les and then et or else sont autorisé pour les booléens. (GNAT)
pragma Restrictions (No_Implicit_Dynamic_Code);
--  Interdit la création de code durant l'execution pour ensuite
--  l'exécuter. (Code exécuté depuis la zone de data.) (GNAT)

pragma Restrictions (No_Anonymous_Allocators);
--  Aucune allocation de mémoire par un type pointeur anonyme.
pragma Restrictions (No_Implicit_Heap_Allocations);
--  pragma Restrictions (No_Local_Allocators);
--  Uniquement des allocations (new nom_type) globales sont
--  autorisées.
--  pragma Restrictions (No_Standard_Allocators_After_Elaboration);
--  Les allocations mémoire ne sont autorisé que pendant l'élaboration.

--  pragma Restrictions (No_Recursion);
--  mis en commentaire à cause de
--  "ada_containers-aunit_lists.adb"
--  "aunit-test_suites.adb"
--  Interdit les appels recursif.
pragma Restrictions (No_Reentrancy);
--  Deux task différentes n'ont pas le droit d'appeler le
--  même sous programme en même temps.
pragma Restrictions (No_Relative_Delay);
--  Interdit l'utilisation de delais relatif. (delay 1.23)

pragma Restrictions (No_Unchecked_Access);
pragma Restrictions (No_Obsolescent_Features);
